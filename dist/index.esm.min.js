import t,{createContext as s,Component as e}from"react";var r={data:{},get(t){return this.data[t]},register(t,s){this.data[t]=s}};const i={data:{},get(t){return this.data[t]},set(t,s){if(void 0!==this.data[t])throw new Error(`${t} is already exists.`);this.data[t]=s}},n=n=>{if(void 0!==r.get(n))throw new Error(`${n} is already regist.`);const c=s({});return r.register(n,c),s=>(class extends e{constructor(){super(...arguments),this.state={context:{}}}componentDidMount(){i.get(s.name).subscribe(t=>{this.setState({context:t})})}render(){return t.createElement(c.Provider,{value:this.state.context},t.createElement(s,Object.assign({},this.props)))}})};class c{constructor(t){this.isStopped=!1,this.destination=this.safeObserver(t)}safeObserver(t){return{next:t}}next(t){if(!this.isStopped&&this.next)try{this.destination.next(t)}catch(t){throw this.unsubscribe(),t}}error(t){if(!this.isStopped&&this.error){try{this.destination.error(t)}catch(t){throw this.unsubscribe(),t}this.unsubscribe()}}complete(){if(!this.isStopped&&this.complete){try{this.destination.complete()}catch(t){throw this.unsubscribe(),t}this.unsubscribe()}}unsubscribe(){this.isStopped=!0}}class h{constructor(){this.closed=!1,this.observers=[]}next(t){this.closed||this.observers.forEach(s=>s.next(t))}subscribe(t){const s=new c(t);return this.observers.push(s),s}unsubscribe(){this.closed=!0}}class o extends h{constructor(t){super(),this.store=t}get value(){return this.getValue()}getValue(){if(this.closed)throw new Error("subject has been closed.");return this.store}next(t){this.store=t,super.next(t)}subscribe(t){const s=super.subscribe(t);return s.next(this.store),s}}const u=(t,s,e)=>{const r=t.constructor.name;let n=e.initializer();i.get(r)||i.set(r,new o({}));const c=i.get(r);function h(t){c.subscribe(e=>{e[s]!==t&&c.next(Object.assign({},e,{[s]:t}))}).unsubscribe()}h(n);return{configurable:!0,enumerable:!1,get:()=>n,set:t=>{h(t),n=t}}},a=(t,s)=>{const e=t.constructor.name;i.get(e)||i.set(e,new o({}));const r=i.get(e),n=new h;r.subscribe(t=>{void 0===t[s]&&r.next(Object.assign({},t,{[s]:function(t){n.next(t)}}))}).unsubscribe();return{configurable:!0,enumerable:!1,get:()=>n,set:()=>{console.log(`can note set listen: ${s}, it's readonly.`)}}},l=(s,i)=>n=>(class extends e{constructor(){super(...arguments),this.renderContext=(s=>{let e={};return i?i.forEach(t=>{e[t]=s[t]}):e=s,t.createElement(n,Object.assign({},e))})}render(){const e=r.get(s);return e?t.createElement(e.Consumer,null,this.renderContext):null}});export{n as Provider,u as Context,a as Listener,l as Consumer};
//# sourceMappingURL=index.esm.min.js.map
