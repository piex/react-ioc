{"version":3,"file":"index.esm.min.js","sources":["../src/ioc.js","../src/subjects.js","../src/Provider.js","../src/Context.js","../src/Listener.js","../src/Consumer.js"],"sourcesContent":["export default {\n  data: {},\n\n  get(key) {\n    return this.data[key];\n  },\n\n  register(key, value) {\n    this.data[key] = value;\n  },\n};\n","export default {\n  data: {},\n\n  get(className) {\n    return this.data[className];\n  },\n\n  set(className, value) {\n    if (typeof this.data[className] != 'undefined') {\n      throw new Error(`${className} is already exists.`);\n    } else {\n      this.data[className] = value;\n    }\n  },\n};\n","import React, { Component, createContext } from 'react';\nimport ioc from './ioc';\nimport subjects from './subjects';\n\nexport const Provider = name => {\n  if (typeof ioc.get(name) !== 'undefined') {\n    throw new Error(`${name} 已被注册！`);\n  }\n\n  const Context = createContext({});\n  ioc.register(name, Context);\n\n  return Cmpt => {\n    return class Regist extends Component {\n      state = {\n        context: {},\n      };\n\n      componentDidMount() {\n        subjects.get(Cmpt.name).subscribe(data => {\n          this.setState({\n            context: data,\n          });\n        });\n      }\n\n      render() {\n        return (\n          <Context.Provider value={this.state.context}>\n            <Cmpt {...this.props} />\n          </Context.Provider>\n        );\n      }\n    };\n  };\n};\n","import { BehaviorSubject } from 'rxjs';\nimport subjects from './subjects';\n\nexport const Context = (target, key, descriptor) => {\n  const name = target.constructor.name;\n  let value = descriptor.initializer();\n\n  if (!subjects.get(name)) {\n    const bs$ = new BehaviorSubject({});\n    subjects.set(name, bs$);\n  }\n\n  const bs$ = subjects.get(name);\n\n  function update(value) {\n    const context$$ = bs$.subscribe(v => {\n      if (v[key] !== value) {\n        bs$.next(Object.assign({}, v, { [key]: value }));\n      }\n    });\n    context$$.unsubscribe();\n  }\n\n  // init context\n  update(value);\n\n  const get = function() {\n    return value;\n  };\n\n  const set = newVal => {\n    update(newVal);\n    value = newVal;\n  };\n\n  return {\n    get,\n    set,\n    enumerable: false,\n    configurable: true,\n  };\n};\n","import { BehaviorSubject, Subject } from 'rxjs';\n\nimport subjects from './subjects';\n\nexport const Listener = (target, key) => {\n  const name = target.constructor.name;\n\n  if (!subjects.get(name)) {\n    const bs$ = new BehaviorSubject({});\n    subjects.set(name, bs$);\n  }\n\n  const bs$ = subjects.get(name);\n  const keySub$ = new Subject();\n\n  const bs$$ = bs$.subscribe(v => {\n\n    function update(...args) {\n      keySub$.next(...args);\n    }\n    \n    if(typeof v[key] === 'undefined') {\n      bs$.next(Object.assign({}, v, { [key]: update }));\n    }\n  });\n\n  bs$$.unsubscribe();\n\n  const get = function() {\n    return keySub$;\n  };\n\n  const set = () => {\n    console.log(`can note set listen: ${key}, it's readonly.`);\n  };\n\n  return {\n    get,\n    set,\n    enumerable: false,\n    configurable: true,\n  };\n};\n","import React, { Component } from 'react';\nimport ioc from './ioc';\n\nexport const Consumer = (name, dependencies) => {\n  return Cmpt => {\n    return class Ins extends Component {\n      renderContext = context => {\n        let props = {};\n\n        if (dependencies) {\n          dependencies.forEach(key => {\n            props[key] = context[key];\n          });\n        } else {\n          props = context;\n        }\n\n        return <Cmpt {...props} />;\n      };\n\n      render() {\n        const Context = ioc.get(name);\n\n        if (Context) {\n          return <Context.Consumer>{this.renderContext}</Context.Consumer>;\n        }\n\n        return null;\n      }\n    };\n  };\n};\n"],"names":["data","get","key","this","register","value","className","set","Error","Provider","name","ioc","Context","createContext","Cmpt","_this","context","tslib_1.__extends","Regist","subjects","subscribe","setState","React","state","props","Component","target","descriptor","constructor","initializer","bs$_1","BehaviorSubject","bs$","update","v","next","Object","assign","unsubscribe","newVal","enumerable","configurable","Listener","keySub$","Subject","_i","args","console","log","Consumer","dependencies","forEach","Ins","renderContext"],"mappings":"4JAAA,MAAe,CACbA,KAAM,GAENC,aAAIC,GACF,OAAOC,KAAKH,KAAKE,IAGnBE,kBAASF,EAAKG,GACZF,KAAKH,KAAKE,GAAOG,MCRN,CACbL,KAAM,GAENC,aAAIK,GACF,OAAOH,KAAKH,KAAKM,IAGnBC,aAAID,EAAWD,GACb,QAAmC,IAAxBF,KAAKH,KAAKM,GACnB,MAAM,IAAIE,MAASF,yBAEnBH,KAAKH,KAAKM,GAAaD,ICPhBI,EAAW,SAAAC,GACtB,QAA6B,IAAlBC,EAAIV,IAAIS,GACjB,MAAM,IAAIF,MAASE,YAGrB,IAAME,EAAUC,EAAc,IAG9B,OAFAF,EAAIP,SAASM,EAAME,GAEZ,SAAAE,GACL,mBAAO,aAAA,qDACLC,QAAQ,CACNC,QAAS,MAkBb,OApB4BC,OAK1BC,8BAAA,WAAA,WACEC,EAASlB,IAAIa,EAAKJ,MAAMU,UAAU,SAAApB,GAChCe,EAAKM,SAAS,CACZL,QAAShB,OAKfkB,mBAAA,WACE,OACEI,gBAACV,EAAQH,UAASJ,MAAOF,KAAKoB,MAAMP,SAClCM,gBAACR,OAASX,KAAKqB,aAhBKC,KCVnBb,EAAU,SAACc,EAAQxB,EAAKyB,GACnC,IAAMjB,EAAOgB,EAAOE,YAAYlB,KAC5BL,EAAQsB,EAAWE,cAEvB,IAAKV,EAASlB,IAAIS,GAAO,CACvB,IAAMoB,EAAM,IAAIC,EAAgB,IAChCZ,EAASZ,IAAIG,EAAMoB,GAGrB,IAAME,EAAMb,EAASlB,IAAIS,GAEzB,SAASuB,EAAO5B,GACI2B,EAAIZ,UAAU,SAAAc,SAC1BA,EAAEhC,KAASG,GACb2B,EAAIG,KAAKC,OAAOC,OAAO,GAAIH,UAAMhC,GAAMG,SAGjCiC,cAIZL,EAAO5B,GAWP,MAAO,CACLJ,IAVU,WACV,OAAOI,GAUPE,IAPU,SAAAgC,GACVN,EAAOM,GACPlC,EAAQkC,GAMRC,YAAY,EACZC,cAAc,ICnCLC,EAAW,SAAChB,EAAQxB,GAC/B,IAAMQ,EAAOgB,EAAOE,YAAYlB,KAEhC,IAAKS,EAASlB,IAAIS,GAAO,CACvB,IAAMoB,EAAM,IAAIC,EAAgB,IAChCZ,EAASZ,IAAIG,EAAMoB,GAGrB,IAAME,EAAMb,EAASlB,IAAIS,GACnBiC,EAAU,IAAIC,EAEPZ,EAAIZ,UAAU,SAAAc,cAMJ,IAAXA,EAAEhC,IACV8B,EAAIG,KAAKC,OAAOC,OAAO,GAAIH,UAAMhC,GALnC,eAAgB,aAAA2C,mBAAAA,IAAAC,kBACdH,EAAQR,WAARQ,EAAgBG,WAQfR,cAUL,MAAO,CACLrC,IATU,WACV,OAAO0C,GASPpC,IANU,WACVwC,QAAQC,IAAI,wBAAwB9C,uBAMpCsC,YAAY,EACZC,cAAc,ICrCLQ,EAAW,SAACvC,EAAMwC,GAC7B,OAAO,SAAApC,GACL,mBAAO,aAAA,qDACLC,gBAAgB,SAAAC,GACd,IAAIQ,EAAQ,GAUZ,OARI0B,EACFA,EAAaC,QAAQ,SAAAjD,GACnBsB,EAAMtB,GAAOc,EAAQd,KAGvBsB,EAAQR,EAGHM,gBAACR,OAASU,OAYrB,OAxByBP,OAevBmC,mBAAA,WACE,IAAMxC,EAAUD,EAAIV,IAAIS,GAExB,OAAIE,EACKU,gBAACV,EAAQqC,cAAU9C,KAAKkD,eAG1B,SAtBc5B"}