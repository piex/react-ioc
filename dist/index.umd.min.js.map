{"version":3,"file":"index.umd.min.js","sources":["../src/ioc.ts","../src/subjects.ts","../src/reactivex/Observer.ts","../src/reactivex/Subject.ts","../src/reactivex/BehaviorSubject.ts","../src/Provider.tsx","../src/Context.ts","../src/Listener.ts","../src/Consumer.tsx"],"sourcesContent":["export default {\n  data: {},\n\n  get(key: string) {\n    return this.data[key];\n  },\n\n  register(key: string, value) {\n    this.data[key] = value;\n  },\n};\n","import Subject from './reactivex/Subject';\n\nexport interface ISubjects {\n  data: {[key: string]: Subject<any> };\n  get(registName: string): Subject<any>;\n  set(registName: string, subject: Subject<any>): void;\n}\n\nconst subjects: ISubjects = {\n  data: {},\n\n  get(registName: string) {\n    return this.data[registName];\n  },\n\n  set(registName: string, subject: Subject<any>) {\n    if (typeof this.data[registName] !== 'undefined') {\n      throw new Error(`${registName} is already exists.`);\n    } else {\n      this.data[registName] = subject;\n    }\n  },\n};\n\nexport default subjects;\n","export interface IDestination<T> {\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport default class Observer<T> {\n\n  public destination: IDestination<T>;\n  private isStopped = false;\n\n  constructor(destinationOrNext: (args: any) => void) {\n    this.destination = this.safeObserver(destinationOrNext);\n  }\n\n  public safeObserver(observerOrNext: (value: T) => void): IDestination<T> {\n    return {\n      next: observerOrNext,\n    };\n  }\n\n  public next(args: T) {\n    if (!this.isStopped && this.next) {\n      try {\n        this.destination.next(args); // send next\n      } catch (err) {\n        this.unsubscribe();\n        throw err;\n      }\n    }\n  }\n\n  public error(err) {\n    if (!this.isStopped && this.error) {\n      try {\n        this.destination.error(err); // send error\n      } catch (anotherError) {\n        this.unsubscribe();\n        throw anotherError;\n      }\n      this.unsubscribe();\n    }\n  }\n\n  public complete() {\n    if (!this.isStopped && this.complete) {\n      // 先判斷是否停止過\n      try {\n        this.destination.complete(); // send complete\n      } catch (err) {\n        this.unsubscribe();\n        throw err;\n      }\n      this.unsubscribe(); // unsubscribe after send complete\n    }\n  }\n\n  public unsubscribe() {\n    this.isStopped = true;\n  }\n\n}\n","import Observer from './Observer';\n\nexport default class Subject<T> {\n  public closed = false;\n\n  private observers: Array<Observer<T>> = [];\n\n  public next(args?: T) {\n    if (!this.closed) {\n      this.observers.forEach((observer) => observer.next(args));\n    }\n  }\n\n  public subscribe(observerOrNext: (args: T) => void) {\n    const observer = new Observer<T>(observerOrNext);\n    this.observers.push(observer);\n    return observer;\n  }\n\n  public unsubscribe() {\n    this.closed = true;\n  }\n}\n","import Subject from './Subject';\n\nexport default class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private store: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  public getValue(): T {\n   if (this.closed) {\n      throw new Error('subject has been closed.');\n    } else {\n      return this.store;\n    }\n  }\n\n  public next(value: T): void {\n    this.store = value;\n    super.next(value);\n  }\n\n  public subscribe(observerOrNext: (args: T) => void) {\n    const observer = super.subscribe(observerOrNext);\n    observer.next(this.store);\n    return observer;\n  }\n}\n","import React, {Component, createContext} from 'react';\nimport ioc from './ioc';\nimport subjects from './subjects';\n\nexport const Provider = (name: string) => {\n  if (typeof ioc.get(name) !== 'undefined') {\n    throw new Error(`${name} is already regist.`);\n  }\n\n  const Context = createContext({});\n  ioc.register(name, Context);\n\n  return  (Cmpt) => {\n\n    return class Regist extends Component<any> {\n      public state = {\n        context: {},\n      };\n\n      public componentDidMount() {\n        const subject$ = subjects.get(Cmpt.name);\n        subject$.subscribe((data) => {\n          this.setState({\n            context: data,\n          });\n        });\n      }\n\n      public render() {\n        return (\n          <Context.Provider value={this.state.context}>\n            <Cmpt {...this.props}/>\n          </Context.Provider>\n        );\n      }\n    };\n\n  };\n\n};\n","import BehaviorSubject from './reactivex/BehaviorSubject';\nimport subjects from './subjects';\n\nexport const Context = (target: any, key: string, descriptor: any ) => {\n\n  const name = target.constructor.name;\n  let value = descriptor.initializer();\n\n  if (!subjects.get(name)) {\n    subjects.set(name, new BehaviorSubject({}));\n  }\n\n  const bs$ = subjects.get(name);\n\n  function update(vs: any) {\n    const context$$ = bs$.subscribe((v) => {\n      if (v[key] !== vs) {\n        bs$.next(Object.assign({}, v, {[key]: vs}));\n      }\n    });\n    context$$.unsubscribe();\n  }\n\n  update(value);\n\n  const get = () => {\n    return value;\n  };\n\n  const set = (newVal: any) => {\n    update(newVal);\n    value = newVal;\n  };\n\n  return {\n    configurable: true,\n    enumerable: false,\n    get,\n    set,\n  };\n\n};\n","import BehaviorSubject from './reactivex/BehaviorSubject';\nimport Subject from './reactivex/Subject';\nimport subjects from './subjects';\n\nexport const Listener = (target: any, key: string) => {\n  const name = target.constructor.name;\n\n  if (!subjects.get(name)) {\n    subjects.set(name, new BehaviorSubject({}));\n  }\n\n  const bs$ = subjects.get(name);\n  const keySub$ = new Subject();\n\n  const bs$$ = bs$.subscribe((v) => {\n    function update(args) {\n      keySub$.next(args);\n    }\n\n    if (typeof v[key] === 'undefined') {\n      bs$.next(Object.assign({}, v, { [key]: update }));\n    }\n  });\n\n  bs$$.unsubscribe();\n\n  const get = () => {\n    return keySub$;\n  };\n\n  const set = () => {\n    // tslint:disable-next-line\n    console.log(`can note set listen: ${key}, it's readonly.`);\n  };\n\n  return {\n    configurable: true,\n    enumerable: false,\n    get,\n    set,\n  };\n\n};\n","import React, { Component } from 'react';\nimport ioc from './ioc';\n\nexport const Consumer = (name: string, dependencies?: string[]) => {\n\n  return (Cmpt) => {\n\n    return class Instance extends Component<any> {\n\n      public renderContext = (context) => {\n        let props = {};\n\n        if (dependencies) {\n          dependencies.forEach((key) => {\n            props[key] = context[key];\n          });\n        } else {\n          props = context;\n        }\n\n        return <Cmpt {...props} />;\n      }\n\n      public render() {\n        const Context = ioc.get(name);\n\n        if (Context) {\n          return <Context.Consumer>{this.renderContext}</Context.Consumer>;\n        }\n\n        return null;\n      }\n\n    };\n  };\n\n};\n"],"names":["data","[object Object]","key","this","value","subjects","registName","subject","Error","Observer","destinationOrNext","destination","safeObserver","observerOrNext","next","args","isStopped","err","unsubscribe","error","anotherError","complete","Subject","closed","observers","forEach","observer","push","BehaviorSubject","store","super","getValue","subscribe","name","ioc","get","Context","createContext","register","Cmpt","Component","context","setState","React","Provider","state","props","target","descriptor","constructor","initializer","set","bs$","update","vs","v","Object","assign","configurable","enumerable","newVal","keySub$","console","log","dependencies","Consumer","renderContext"],"mappings":"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"}